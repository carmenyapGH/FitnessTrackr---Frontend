{"ast":null,"code":"var _jsxFileName = \"/Users/carmenyap/test-site/UNIV Web - FitnessTrackr_React Front-End/src/Components/Update.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateRoutines, fetchRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    setRoutines,\n    routines,\n    setUserdata,\n    userdata\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(\"\");\n  const history = useNavigate();\n  const params = useParams();\n  const post_id = params.id;\n  console.log(\"params\", params);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const localSourcedToken = localStorage.getItem(\"token\");\n    console.log(isPublic);\n    const response = await updateRoutines(localSourcedToken, name, goal, isPublic, post_id);\n\n    if (response.success) {\n      fetchRoutines().then(routines => {\n        setRoutines(routines);\n      });\n      history(\"/routines\");\n    }\n  };\n\n  const checkboxToggle = () => {\n    document.getElementById(\"controlledCheckbox\").checked = isPublic;\n  }; // useEffect(() => {\n  //   // checkboxToggle();\n  // }, [isPublic]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: routines && routines.filter(post => {\n      if (userdata && userdata._id) {\n        return post._id === post_id;\n      }\n\n      return false;\n    }).map(_ref2 => {\n      let {\n        title,\n        goal,\n        price,\n        location,\n        isPublic\n      } = _ref2;\n      if (!name) setName(title);\n      if (!goal) setGoal(goal);\n      if (isPublic === null) setIsPublic(isPublic); // setIsPublic(isPublic);\n\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"update-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-form-grp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            id: \"title_input\",\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-form-grp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: goal,\n            row: \"5\",\n            id: \"goal_input\",\n            onChange: event => setGoal(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-form-grp\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"update-form-grp-cbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"controlledCheckbox\",\n              type: \"checkbox\",\n              checked: isPublic,\n              onChange: event => setIsPublic(event.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Public?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, \"_id\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"Qha3WSjHRFK6AUrUrLP4snNozCc=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/carmenyap/test-site/UNIV Web - FitnessTrackr_React Front-End/src/Components/Update.js"],"names":["useState","useEffect","useParams","useNavigate","updateRoutines","fetchRoutines","Update","setRoutines","routines","setUserdata","userdata","name","setName","goal","setGoal","isPublic","setIsPublic","history","params","post_id","id","console","log","handleSubmit","event","preventDefault","localSourcedToken","localStorage","getItem","response","success","then","checkboxToggle","document","getElementById","checked","filter","post","_id","map","title","price","location","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateRoutines, fetchRoutines } from \"../api\";\n\nconst Update = ({ setRoutines, routines, setUserdata, userdata }) => {\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(\"\");\n  const history = useNavigate();\n  const params = useParams();\n  const post_id = params.id;\n  console.log(\"params\", params);\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const localSourcedToken = localStorage.getItem(\"token\");\n    console.log(isPublic);\n\n    const response = await updateRoutines(\n      localSourcedToken,\n      name,\n      goal,\n      isPublic,\n      post_id\n    );\n\n    if (response.success) {\n      fetchRoutines().then((routines) => {\n        setRoutines(routines);\n      });\n      history(\"/routines\");\n    }\n  };\n\n  const checkboxToggle = () => {\n    document.getElementById(\"controlledCheckbox\").checked = isPublic;\n  };\n\n  // useEffect(() => {\n  //   // checkboxToggle();\n  // }, [isPublic]);\n\n  return (\n    <div>\n      {routines &&\n        routines\n          .filter((post) => {\n            if (userdata && userdata._id) {\n              return post._id === post_id;\n            }\n            return false;\n          })\n\n          .map(({ title, goal, price, location, isPublic }) => {\n            if (!name) setName(title);\n            if (!goal) setGoal(goal);\n            if (isPublic === null) setIsPublic(isPublic);\n            // setIsPublic(isPublic);\n\n            return (\n              <form key=\"_id\" onSubmit={handleSubmit} className=\"update-form\">\n                <div className=\"update-form-grp\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    value={name}\n                    id=\"title_input\"\n                    onChange={(event) => setName(event.target.value)}\n                  />\n                </div>\n\n                <div className=\"update-form-grp\">\n                  <label>goal</label>\n                  <textarea\n                    type=\"text\"\n                    value={goal}\n                    row=\"5\"\n                    id=\"goal_input\"\n                    onChange={(event) => setGoal(event.target.value)}\n                  />\n                </div>\n\n                <div className=\"update-form-grp\">\n                  <div className=\"update-form-grp-cbox\">\n                    <input\n                      id=\"controlledCheckbox\"\n                      type=\"checkbox\"\n                      checked={isPublic}\n                      onChange={(event) => setIsPublic(event.target.checked)}\n                    />\n\n                    <span>Public?</span>\n                  </div>\n                </div>\n\n                <button type=\"submit\">Update Routine</button>\n              </form>\n            );\n          })}\n    </div>\n  );\n};\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}
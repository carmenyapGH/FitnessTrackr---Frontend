{"ast":null,"code":"var _jsxFileName = \"/Users/carmenyap/test-site/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { fetchRoutines, userInfo, deleteRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routines = _ref => {\n  _s();\n\n  let {\n    routines,\n    setRoutines,\n    userdata,\n    setUserdata,\n    token,\n    setToken,\n    singleRoutine\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  const handleDelete = async (id, token) => {\n    try {\n      const response = await deleteRoutines(id, token);\n\n      if (response.success) {\n        fetchRoutines().then(routines => {\n          setRoutines(routines);\n        });\n        history(\"/routines\");\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleUpdate = post_id => {\n    history(`/update/${post_id}`);\n  }; // const displayActivities = routines.map((routines) =>\n  //   routines.activities.map((x) => x.name)\n  // );\n\n\n  console.log(\" userdata\", userdata); // console.log(\"map\", displayActivities);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-hdr\",\n      children: routines && routines.map(routine => {\n        const {\n          id,\n          name,\n          goal,\n          creatorName,\n          activities\n        } = routine;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"routines-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\" \", goal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"creatorName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), creatorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: activities.map(_ref2 => {\n              let {\n                id,\n                name,\n                duration,\n                count\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tab\",\n                  children: [\"( \", duration, \" mins \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", count, \" reps) \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Routines, \"ASwhcTR17PSwZ+WwauwZsl8VdWA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/Users/carmenyap/test-site/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/Routines.js"],"names":["useState","Link","useNavigate","fetchRoutines","userInfo","deleteRoutines","Routines","routines","setRoutines","userdata","setUserdata","token","setToken","singleRoutine","username","setUsername","password","setPassword","error","setError","history","handleDelete","id","response","success","then","e","console","handleUpdate","post_id","log","map","routine","name","goal","creatorName","activities","duration","count"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { fetchRoutines, userInfo, deleteRoutines } from \"../api\";\n\nconst Routines = ({\n  routines,\n  setRoutines,\n  userdata,\n  setUserdata,\n  token,\n  setToken,\n  singleRoutine,\n}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  const handleDelete = async (id, token) => {\n    try {\n      const response = await deleteRoutines(id, token);\n      if (response.success) {\n        fetchRoutines().then((routines) => {\n          setRoutines(routines);\n        });\n        history(\"/routines\");\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleUpdate = (post_id) => {\n    history(`/update/${post_id}`);\n  };\n\n  // const displayActivities = routines.map((routines) =>\n  //   routines.activities.map((x) => x.name)\n  // );\n\n  console.log(\" userdata\", userdata);\n  // console.log(\"map\", displayActivities);\n  return (\n    <>\n      <div className=\"routines-hdr\">\n        {routines &&\n          routines.map((routine) => {\n            const { id, name, goal, creatorName, activities } = routine;\n            return (\n              <div className=\"routines-detail\" key={id}>\n                <h3>{name} </h3>\n                <h4> {goal}</h4>\n                <p>\n                  <span className=\"creatorName\"></span>\n                  {creatorName}\n                </p>\n                <ul>\n                  {activities.map(({ id, name, duration, count }) => {\n                    return (\n                      <li key={id}>\n                        <span> {name} </span>\n                        <span className=\"tab\">( {duration} mins </span>\n                        <span> {count} reps) </span>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default Routines;\n"]},"metadata":{},"sourceType":"module"}
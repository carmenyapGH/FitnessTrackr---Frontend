{"ast":null,"code":"var _jsxFileName = \"/Users/carmenyap/test-site/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/UpdateRoutineActivities.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateRoutineActivities, fetchMyRoutines, fetchRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateRoutineActivities = _ref => {\n  _s();\n\n  let {\n    myroutines,\n    setMyroutines,\n    setUserdata,\n    userdata,\n    setRoutines,\n    singleRoutine,\n    setSingleRoutine,\n    singleActivity,\n    setSingleActivity\n  } = _ref;\n  const params = useParams();\n  const routineId = params.id;\n  const {\n    name,\n    goal\n  } = singleRoutine;\n  const [routineActivityId, setRoutineActivityId] = useState(0);\n  const [activity, setActivity] = useState(0);\n  const [count, setCount] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const history = useNavigate();\n  console.log(\"params\", routineId);\n\n  let handleSelect = e => {\n    setRoutineActivityId(parseInt(e.target.value));\n    console.log(\"e.target.value\", routineActivityId);\n  };\n\n  const handleSubmit = async event => {\n    console, event.preventDefault(); // console.log(\"updateRoutineActivities\", routineActivityId);\n    // console.log(\"isNan-false is# ?\", isNaN(routineActivityId));\n\n    const localSourcedToken = localStorage.getItem(\"token\");\n\n    try {\n      const response = await updateRoutineActivities(localSourcedToken, routineActivityId, count, duration);\n      fetchMyRoutines(userdata.username).then(myroutines => {\n        setMyroutines(myroutines);\n      });\n      fetchRoutines().then(routines => {\n        setRoutines(routines);\n      });\n      history(\"/myroutines\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: singleRoutine ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"updateRoutineActivities-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" Routine: \", name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" Goal: \", goal, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select an routine activity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"updateRoutineActivities-form-grp\",\n        onChange: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"select an option\",\n          children: \" Please choose an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), Object.values(singleRoutine.activities).map(activity => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: activity.routineActivityId,\n          children: activity.name\n        }, activity.routineActivityId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateRoutineActivities-form-grp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"mins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: duration,\n          min: \"0\" // placeholder=\"Enter count..\"\n          ,\n          onChange: event => setDuration(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateRoutineActivities-form-grp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: count,\n          min: \"0\" // placeholder=\"Enter duration..\"\n          ,\n          onChange: event => setCount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Routine Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateRoutineActivities, \"GIG70uYIIrD29mGpcF61zanf7gc=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UpdateRoutineActivities;\nexport default UpdateRoutineActivities;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRoutineActivities\");","map":{"version":3,"sources":["/Users/carmenyap/test-site/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/UpdateRoutineActivities.js"],"names":["useState","useParams","useNavigate","updateRoutineActivities","fetchMyRoutines","fetchRoutines","UpdateRoutineActivities","myroutines","setMyroutines","setUserdata","userdata","setRoutines","singleRoutine","setSingleRoutine","singleActivity","setSingleActivity","params","routineId","id","name","goal","routineActivityId","setRoutineActivityId","activity","setActivity","count","setCount","duration","setDuration","history","console","log","handleSelect","e","parseInt","target","value","handleSubmit","event","preventDefault","localSourcedToken","localStorage","getItem","response","username","then","routines","error","Object","values","activities","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  updateRoutineActivities,\n  fetchMyRoutines,\n  fetchRoutines,\n} from \"../api\";\n\nconst UpdateRoutineActivities = ({\n  myroutines,\n  setMyroutines,\n  setUserdata,\n  userdata,\n  setRoutines,\n  singleRoutine,\n  setSingleRoutine,\n  singleActivity,\n  setSingleActivity,\n}) => {\n  const params = useParams();\n  const routineId = params.id;\n  const { name, goal } = singleRoutine;\n  const [routineActivityId, setRoutineActivityId] = useState(0);\n  const [activity, setActivity] = useState(0);\n  const [count, setCount] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const history = useNavigate();\n  console.log(\"params\", routineId);\n\n  let handleSelect = (e) => {\n    setRoutineActivityId(parseInt(e.target.value));\n    console.log(\"e.target.value\", routineActivityId);\n  };\n\n  const handleSubmit = async (event) => {\n    console, event.preventDefault();\n    // console.log(\"updateRoutineActivities\", routineActivityId);\n    // console.log(\"isNan-false is# ?\", isNaN(routineActivityId));\n    const localSourcedToken = localStorage.getItem(\"token\");\n\n    try {\n      const response = await updateRoutineActivities(\n        localSourcedToken,\n        routineActivityId,\n        count,\n        duration\n      );\n\n      fetchMyRoutines(userdata.username).then((myroutines) => {\n        setMyroutines(myroutines);\n      });\n      fetchRoutines().then((routines) => {\n        setRoutines(routines);\n      });\n\n      history(\"/myroutines\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      {singleRoutine ? (\n        <form className=\"updateRoutineActivities-form\" onSubmit={handleSubmit}>\n          <br />\n\n          <h3> Routine: {name} </h3>\n          <h4> Goal: {goal} </h4>\n\n          <label>Select an routine activity:</label>\n          <select\n            className=\"updateRoutineActivities-form-grp\"\n            onChange={handleSelect}\n          >\n            <option value=\"select an option\"> Please choose an option</option>\n            {Object.values(singleRoutine.activities).map((activity) => (\n              <option\n                key={activity.routineActivityId}\n                value={activity.routineActivityId}\n              >\n                {activity.name}\n              </option>\n            ))}\n          </select>\n\n          <div className=\"updateRoutineActivities-form-grp\">\n            <label>mins</label>\n            <input\n              type=\"number\"\n              value={duration}\n              min=\"0\"\n              // placeholder=\"Enter count..\"\n              onChange={(event) => setDuration(event.target.value)}\n            />\n          </div>\n\n          <div className=\"updateRoutineActivities-form-grp\">\n            <label>reps</label>\n            <input\n              type=\"number\"\n              value={count}\n              min=\"0\"\n              // placeholder=\"Enter duration..\"\n              onChange={(event) => setCount(event.target.value)}\n            />\n          </div>\n\n          <button type=\"submit\">Update Routine Activity</button>\n        </form>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UpdateRoutineActivities;\n"]},"metadata":{},"sourceType":"module"}
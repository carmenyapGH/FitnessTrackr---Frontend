{"ast":null,"code":"export const BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\nexport const fetchMyRoutines = async username => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/${username}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const {\n      data: {\n        posts\n      }\n    } = await response.json();\n    return posts;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const fetchActivities = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/${username}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const {\n      data: {\n        posts\n      }\n    } = await response.json();\n    return posts;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const info = await response.json();\n    return info;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const register = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const info = await response.json();\n    return info;\n  } catch (error) {\n    console.error(`Error registering a user ${error}`);\n  }\n};\nexport const userInfo = async token => {\n  try {\n    const userResponse = await fetch(`${BASE_URL}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const info = await userResponse.json();\n    return info;\n  } catch (error) {\n    console.error(`Error retrieving user information ${error}`); // throw error;\n  }\n};\nexport const activities = async token => {\n  try {\n    const userResponse = await fetch(`${BASE_URL}/activities`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const info = await userResponse.json();\n    return info;\n  } catch (error) {\n    console.error(`Error retrieving activities ${error}`); // throw error;\n  }\n};","map":{"version":3,"sources":["/Users/carmenyap/test-site/UNIV Web - FitnessTrackr_React Front-End/src/api/index.js"],"names":["BASE_URL","fetchMyRoutines","username","response","fetch","headers","data","posts","json","error","console","fetchActivities","login","password","method","body","JSON","stringify","info","register","userInfo","token","userResponse","Authorization","activities"],"mappings":"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","sourcesContent":["export const BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\n\nexport const fetchMyRoutines = async (username) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/${username}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const {\n      data: { posts },\n    } = await response.json();\n\n    return posts;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchActivities = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/${username}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const {\n      data: { posts },\n    } = await response.json();\n\n    return posts;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    const info = await response.json();\n    return info;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const register = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    const info = await response.json();\n\n    return info;\n  } catch (error) {\n    console.error(`Error registering a user ${error}`);\n  }\n};\n\nexport const userInfo = async (token) => {\n  try {\n    const userResponse = await fetch(`${BASE_URL}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const info = await userResponse.json();\n\n    return info;\n  } catch (error) {\n    console.error(`Error retrieving user information ${error}`);\n    // throw error;\n  }\n};\n\nexport const activities = async (token) => {\n  try {\n    const userResponse = await fetch(`${BASE_URL}/activities`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const info = await userResponse.json();\n\n    return info;\n  } catch (error) {\n    console.error(`Error retrieving activities ${error}`);\n    // throw error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
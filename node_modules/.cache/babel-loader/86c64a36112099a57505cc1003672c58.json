{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timyu\\\\Desktop\\\\Front End Trackers\\\\Main_UNIV_FitnessTrackr_FrontEnd\\\\src\\\\Components\\\\Routines.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { fetchRoutines, userInfo, deleteRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routines = _ref => {\n  _s();\n\n  let {\n    routines,\n    setRoutines,\n    setUserdata,\n    userdata,\n    setToken,\n    token,\n    singleRoutine,\n    setSingleRoutine\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  const handleDelete = async (id, token) => {\n    const response = await deleteRoutines(id, token);\n\n    if (response.success) {\n      fetchRoutines().then(routines => {\n        setRoutines(routines);\n      });\n      history(\"/routines\");\n    }\n  };\n\n  const handleUpdate = post_id => {\n    history(`/update/${post_id}`);\n  };\n\n  const displayActivities = routines.map(routines => routines.activities.map(x => x.name));\n  console.log(\" userdata\", userdata); // console.log(\"map\", displayActivities);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: userdata && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"addpost\",\n        to: \"/add\",\n        children: \"ADD ROUTINES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-detail\",\n      children: routines && routines.map(routine => {\n        const {\n          id,\n          name,\n          goal,\n          creatorName,\n          activities\n        } = routine;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Post-Border\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\" \", goal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"creatorName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), creatorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: activities.map(_ref2 => {\n              let {\n                id,\n                name\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\" \", name, \" \"]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), token && userdata.username === creatorName && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deletebtn\",\n                onClick: () => handleDelete(id, token),\n                children: \"Delete Routine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"updatebtn\",\n                onClick: () => {\n                  setSingleRoutine(routine);\n                  history(`/update/${id}`);\n                },\n                children: \"Update Routine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Routines, \"ASwhcTR17PSwZ+WwauwZsl8VdWA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["C:/Users/Timyu/Desktop/Front End Trackers/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/Routines.js"],"names":["useState","Link","useNavigate","fetchRoutines","userInfo","deleteRoutines","Routines","routines","setRoutines","setUserdata","userdata","setToken","token","singleRoutine","setSingleRoutine","username","setUsername","password","setPassword","error","setError","history","handleDelete","id","response","success","then","handleUpdate","post_id","displayActivities","map","activities","x","name","console","log","routine","goal","creatorName"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { fetchRoutines, userInfo, deleteRoutines } from \"../api\";\r\n\r\nconst Routines = ({\r\n  routines,\r\n  setRoutines,\r\n  setUserdata,\r\n  userdata,\r\n  setToken,\r\n  token,\r\n  singleRoutine,\r\n  setSingleRoutine,\r\n}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useNavigate();\r\n\r\n  const handleDelete = async (id, token) => {\r\n    const response = await deleteRoutines(id, token);\r\n    if (response.success) {\r\n      fetchRoutines().then((routines) => {\r\n        setRoutines(routines);\r\n      });\r\n      history(\"/routines\");\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (post_id) => {\r\n    history(`/update/${post_id}`);\r\n  };\r\n\r\n  const displayActivities = routines.map((routines) =>\r\n    routines.activities.map((x) => x.name)\r\n  );\r\n\r\n  console.log(\" userdata\", userdata);\r\n  // console.log(\"map\", displayActivities);\r\n  return (\r\n    <>\r\n      <div>\r\n        {userdata && (\r\n          <Link className=\"addpost\" to=\"/add\">\r\n            ADD ROUTINES\r\n          </Link>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"routines-detail\">\r\n        {routines &&\r\n          routines.map((routine) => {\r\n            const { id, name, goal, creatorName, activities } = routine;\r\n            return (\r\n              <div key={id} className=\"Post-Border\">\r\n                <h3>{name} </h3>\r\n                <h4> {goal}</h4>\r\n                <p>\r\n                  <span className=\"creatorName\"></span>\r\n                  {creatorName}\r\n                </p>\r\n                <ul>\r\n                  {activities.map(({ id, name }) => {\r\n                    return <li key={id}> {name} </li>;\r\n                  })}\r\n                </ul>\r\n\r\n                {token && userdata.username === creatorName && (\r\n                  <>\r\n                    <div>\r\n                      <button\r\n                        className=\"deletebtn\"\r\n                        onClick={() => handleDelete(id, token)}\r\n                      >\r\n                        Delete Routine\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <button\r\n                        className=\"updatebtn\"\r\n                        onClick={() => {\r\n                          setSingleRoutine(routine);\r\n                          history(`/update/${id}`);\r\n                        }}\r\n                      >\r\n                        Update Routine\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routines;\r\n"]},"metadata":{},"sourceType":"module"}
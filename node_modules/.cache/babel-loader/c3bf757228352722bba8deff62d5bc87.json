{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timyu\\\\Desktop\\\\Front End Trackers\\\\Main_UNIV_FitnessTrackr_FrontEnd\\\\src\\\\Components\\\\Update.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateRoutines, fetchRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    setRoutines,\n    singleRoutine,\n    setUserdata,\n    userdata\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [isPublic, setIsPublic] = useState(\"\");\n  const history = useNavigate();\n  const params = useParams();\n  const routineId = params.id;\n  console.log(\"params\", params);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const localSourcedToken = localStorage.getItem(\"token\");\n    console.log(isPublic);\n    const response = await updateRoutines(localSourcedToken, name, goal, isPublic, routineId);\n\n    if (response.success) {\n      // fetchRoutines().then((routines) => {\n      //   setRoutines(routines);\n      // });\n      history(\"/routines\");\n    }\n  };\n\n  const checkboxToggle = () => {\n    document.getElementById(\"controlledCheckbox\").checked = isPublic;\n  }; // useEffect(() => {\n  //   // checkboxToggle();\n  // }, [isPublic]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [singleRoutine.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"Qha3WSjHRFK6AUrUrLP4snNozCc=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["C:/Users/Timyu/Desktop/Front End Trackers/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/Update.js"],"names":["useState","useEffect","useParams","useNavigate","updateRoutines","fetchRoutines","Update","setRoutines","singleRoutine","setUserdata","userdata","name","setName","goal","setGoal","isPublic","setIsPublic","history","params","routineId","id","console","log","handleSubmit","event","preventDefault","localSourcedToken","localStorage","getItem","response","success","checkboxToggle","document","getElementById","checked"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,QAA9C;;;AAEA,MAAMC,MAAM,GAAG,QAA2D;AAAA;;AAAA,MAA1D;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA,WAA9B;AAA2CC,IAAAA;AAA3C,GAA0D;AACxE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,OAAO,GAAGd,WAAW,EAA3B;AACA,QAAMe,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,SAAS,GAAGD,MAAM,CAACE,EAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;;AACA,QAAMK,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,UAAMc,QAAQ,GAAG,MAAMzB,cAAc,CACnCsB,iBADmC,EAEnCf,IAFmC,EAGnCE,IAHmC,EAInCE,QAJmC,EAKnCI,SALmC,CAArC;;AAQA,QAAIU,QAAQ,CAACC,OAAb,EAAsB;AACpB;AACA;AACA;AACAb,MAAAA,OAAO,CAAC,WAAD,CAAP;AACD;AACF,GAnBD;;AAqBA,QAAMc,cAAc,GAAG,MAAM;AAC3BC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,OAA9C,GAAwDnB,QAAxD;AACD,GAFD,CA7BwE,CAiCxE;AACA;AACA;;;AAEA,sBACE;AAAA,2BACE;AAAA,iBAAIP,aAAa,CAACG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CD;;GAAML,M;UAIYH,W,EACDD,S;;;KALXI,M;AA4CN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { updateRoutines, fetchRoutines } from \"../api\";\r\n\r\nconst Update = ({ setRoutines, singleRoutine, setUserdata, userdata }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [goal, setGoal] = useState(\"\");\r\n  const [isPublic, setIsPublic] = useState(\"\");\r\n  const history = useNavigate();\r\n  const params = useParams();\r\n  const routineId = params.id;\r\n  console.log(\"params\", params);\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const localSourcedToken = localStorage.getItem(\"token\");\r\n    console.log(isPublic);\r\n\r\n    const response = await updateRoutines(\r\n      localSourcedToken,\r\n      name,\r\n      goal,\r\n      isPublic,\r\n      routineId\r\n    );\r\n\r\n    if (response.success) {\r\n      // fetchRoutines().then((routines) => {\r\n      //   setRoutines(routines);\r\n      // });\r\n      history(\"/routines\");\r\n    }\r\n  };\r\n\r\n  const checkboxToggle = () => {\r\n    document.getElementById(\"controlledCheckbox\").checked = isPublic;\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // checkboxToggle();\r\n  // }, [isPublic]);\r\n\r\n  return (\r\n    <div>\r\n      <p>{singleRoutine.name} </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n"]},"metadata":{},"sourceType":"module"}
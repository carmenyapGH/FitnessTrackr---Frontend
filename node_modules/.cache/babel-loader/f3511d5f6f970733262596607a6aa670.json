{"ast":null,"code":"var _jsxFileName = \"/Users/carmenyap/test-site/UNIV Web - FitnessTrackr_React Front-End/src/Components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AddRoutines, userInfo, deleteRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routines = _ref => {\n  _s();\n\n  let {\n    posts,\n    setPosts,\n    setUserdata,\n    userdata,\n    setToken,\n    token\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  const handleDelete = async (id, token) => {\n    const response = await deleteRoutines(id, token);\n\n    if (response.success) {\n      fetchRoutines().then(posts => {\n        setPosts(posts);\n      });\n      history(\"/routines\");\n    }\n  }; // const handleUpdate = (post_id) => {\n  //   history(`/update/${post_id}`);\n  // };\n\n\n  const displayActivities = posts.map(posts => posts.activities.map(x => x.name)); // const xitems = displayActivities.map((n) => \"<li>\" + n + \"<i>\");\n  // const xhtml = \"<ul>\" + items.join(\"\") + \"</ul>\";\n  // console.log(\"xmap2\", html);\n\n  console.log(\"map\", displayActivities);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: userdata && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"addpost\",\n        to: \"/add\",\n        children: \"ADD ROUTINES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routine-detail\",\n      children: posts && posts.map(_ref2 => {\n        let {\n          name,\n          goal,\n          creatorName\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\" \", goal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"creatorName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), creatorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), token && userdata.username === username && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deletebtn\",\n                onClick: () => handleDelete(id, token),\n                children: \"Delete Routine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"updatebtn\",\n                onClick: () => handleUpdate(id),\n                children: \"Update Routine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, posts.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Routines, \"ASwhcTR17PSwZ+WwauwZsl8VdWA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/Users/carmenyap/test-site/UNIV Web - FitnessTrackr_React Front-End/src/Components/Routines.js"],"names":["useState","Link","useNavigate","AddRoutines","userInfo","deleteRoutines","Routines","posts","setPosts","setUserdata","userdata","setToken","token","username","setUsername","password","setPassword","error","setError","history","handleDelete","id","response","success","fetchRoutines","then","displayActivities","map","activities","x","name","console","log","goal","creatorName","handleUpdate"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AddRoutines, userInfo, deleteRoutines } from \"../api\";\n\nconst Routines = ({\n  posts,\n  setPosts,\n  setUserdata,\n  userdata,\n  setToken,\n  token,\n}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  const handleDelete = async (id, token) => {\n    const response = await deleteRoutines(id, token);\n\n    if (response.success) {\n      fetchRoutines().then((posts) => {\n        setPosts(posts);\n      });\n      history(\"/routines\");\n    }\n  };\n\n  // const handleUpdate = (post_id) => {\n  //   history(`/update/${post_id}`);\n  // };\n\n  const displayActivities = posts.map((posts) =>\n    posts.activities.map((x) => x.name)\n  );\n\n  // const xitems = displayActivities.map((n) => \"<li>\" + n + \"<i>\");\n  // const xhtml = \"<ul>\" + items.join(\"\") + \"</ul>\";\n  // console.log(\"xmap2\", html);\n\n  console.log(\"map\", displayActivities);\n  return (\n    <>\n      <div>\n        {userdata && (\n          <Link className=\"addpost\" to=\"/add\">\n            ADD ROUTINES\n          </Link>\n        )}\n      </div>\n      <div className=\"routine-detail\">\n        {posts &&\n          posts.map(({ name, goal, creatorName }) => {\n            return (\n              <div key={posts.id}>\n                <h3>{name} </h3>\n                <h4> {goal}</h4>\n                <p>\n                  <span className=\"creatorName\"></span>\n                  {creatorName}\n                </p>\n\n                {token && userdata.username === username && (\n                  <>\n                    <div>\n                      <button\n                        className=\"deletebtn\"\n                        onClick={() => handleDelete(id, token)}\n                      >\n                        Delete Routine\n                      </button>\n                    </div>\n\n                    <div>\n                      <button\n                        className=\"updatebtn\"\n                        onClick={() => handleUpdate(id)}\n                      >\n                        Update Routine\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default Routines;\n"]},"metadata":{},"sourceType":"module"}
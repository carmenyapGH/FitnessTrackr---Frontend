{"ast":null,"code":"var _jsxFileName = \"/Users/carmenyap/test-site/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/Update.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateRoutines, fetchMyRoutines, fetchRoutines } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    singleRoutine,\n    setSingleRoutine,\n    setRoutines,\n    userdata,\n    setUserdata,\n    myroutines,\n    setMyroutines\n  } = _ref;\n  const [name, setName] = useState(singleRoutine.name);\n  const [goal, setGoal] = useState(singleRoutine.goal);\n  const [isPublic, setIsPublic] = useState(singleRoutine.isPublic);\n  const history = useNavigate();\n  const params = useParams();\n  const routineId = params.id;\n  console.log(\"params\", params, routineId);\n  console.log(\"singleR\", singleRoutine); // useEffect(() => {\n  //   setName(singleRoutine.name);\n  //   setGoal(singleRoutine.goal);\n  //   setIsPublic(singleRoutine.isPublic);\n  // }, [singleRoutine]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const localSourcedToken = localStorage.getItem(\"token\");\n    console.log(\"singleRoutine-name\", singleRoutine.name, singleRoutine.isPublic);\n\n    try {\n      const response = await updateRoutines(localSourcedToken, name, goal, isPublic, routineId);\n      fetchMyRoutines(userdata.username).then(myroutines => {\n        setMyroutines(myroutines);\n      });\n      fetchRoutines().then(routines => {\n        setRoutines(routines);\n      });\n      history(\"/myroutines\");\n    } catch (e) {\n      console.error(e);\n    }\n  }; // const checkboxToggle = () => {\n  //   document.getElementById(\"controlledCheckbox\").checked = isPublic;\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: singleRoutine ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"update-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-form-grp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Routine Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          id: \"name_input\",\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-form-grp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: goal,\n          id: \"goal_input\",\n          onChange: event => setGoal(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-form-grp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Public ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"controlledCheckbox\",\n          checked: isPublic,\n          onChange: event => setIsPublic(event.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Public?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update My Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, \"id\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"cuIRGLJjno1g4fVztMMFPSuwf4s=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/carmenyap/test-site/Main_UNIV_FitnessTrackr_FrontEnd/src/Components/Update.js"],"names":["useState","useEffect","useParams","useNavigate","updateRoutines","fetchMyRoutines","fetchRoutines","Update","singleRoutine","setSingleRoutine","setRoutines","userdata","setUserdata","myroutines","setMyroutines","name","setName","goal","setGoal","isPublic","setIsPublic","history","params","routineId","id","console","log","handleSubmit","event","preventDefault","localSourcedToken","localStorage","getItem","response","username","then","routines","e","error","target","value","checked"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateRoutines, fetchMyRoutines, fetchRoutines } from \"../api\";\n\nconst Update = ({\n  singleRoutine,\n  setSingleRoutine,\n  setRoutines,\n  userdata,\n  setUserdata,\n  myroutines,\n  setMyroutines,\n}) => {\n  const [name, setName] = useState(singleRoutine.name);\n  const [goal, setGoal] = useState(singleRoutine.goal);\n  const [isPublic, setIsPublic] = useState(singleRoutine.isPublic);\n  const history = useNavigate();\n  const params = useParams();\n  const routineId = params.id;\n  console.log(\"params\", params, routineId);\n  console.log(\"singleR\", singleRoutine);\n\n  // useEffect(() => {\n  //   setName(singleRoutine.name);\n  //   setGoal(singleRoutine.goal);\n  //   setIsPublic(singleRoutine.isPublic);\n  // }, [singleRoutine]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const localSourcedToken = localStorage.getItem(\"token\");\n    console.log(\n      \"singleRoutine-name\",\n      singleRoutine.name,\n      singleRoutine.isPublic\n    );\n\n    try {\n      const response = await updateRoutines(\n        localSourcedToken,\n        name,\n        goal,\n        isPublic,\n        routineId\n      );\n\n      fetchMyRoutines(userdata.username).then((myroutines) => {\n        setMyroutines(myroutines);\n      });\n      fetchRoutines().then((routines) => {\n        setRoutines(routines);\n      });\n\n      history(\"/myroutines\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // const checkboxToggle = () => {\n  //   document.getElementById(\"controlledCheckbox\").checked = isPublic;\n  // };\n\n  return (\n    <div>\n      {/* <p> {singleRoutine.name}</p> */}\n      {singleRoutine ? (\n        <form key=\"id\" onSubmit={handleSubmit} className=\"update-form\">\n          <div className=\"update-form-grp\">\n            <label>Routine Name</label>\n            <input\n              type=\"text\"\n              value={name}\n              id=\"name_input\"\n              onChange={(event) => setName(event.target.value)}\n            />\n          </div>\n          <div className=\"update-form-grp\">\n            <label>Goal</label>\n            <input\n              type=\"text\"\n              value={goal}\n              id=\"goal_input\"\n              onChange={(event) => setGoal(event.target.value)}\n            />\n          </div>\n          <div className=\"update-form-grp\">\n            <label>Public ?</label>\n            <input\n              type=\"checkbox\"\n              id=\"controlledCheckbox\"\n              checked={isPublic}\n              onChange={(event) => setIsPublic(event.target.checked)}\n            />\n            <span>Public?</span>\n          </div>\n          <button type=\"submit\">Update My Routine</button>\n        </form>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}